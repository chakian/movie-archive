#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MArchive.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MovieArchive")]
	public partial class MovieArchiveDBHistoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZZ_M_Movie_History(ZZ_M_Movie_History instance);
    partial void UpdateZZ_M_Movie_History(ZZ_M_Movie_History instance);
    partial void DeleteZZ_M_Movie_History(ZZ_M_Movie_History instance);
    #endregion
		
		public MovieArchiveDBHistoryDataContext() : 
				base(global::MArchive.DataContext.Properties.Settings.Default.MovieArchiveConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public MovieArchiveDBHistoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieArchiveDBHistoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieArchiveDBHistoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieArchiveDBHistoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ZZ_M_Movie_History> ZZ_M_Movie_Histories
		{
			get
			{
				return this.GetTable<ZZ_M_Movie_History>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZZ_M_Movie_History")]
	public partial class ZZ_M_Movie_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryID;
		
		private int _ID;
		
		private System.Nullable<int> _Year;
		
		private string _ImdbID;
		
		private System.Nullable<double> _ImdbRating;
		
		private string _ImdbPoster;
		
		private bool _ImdbParsed;
		
		private System.Nullable<System.DateTime> _ImdbLastParseDate;
		
		private System.DateTime _InsertDate;
		
		private int _InsertUserID;
		
		private System.DateTime _UpdateDate;
		
		private int _UpdateUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIDChanging(int value);
    partial void OnHistoryIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnImdbIDChanging(string value);
    partial void OnImdbIDChanged();
    partial void OnImdbRatingChanging(System.Nullable<double> value);
    partial void OnImdbRatingChanged();
    partial void OnImdbPosterChanging(string value);
    partial void OnImdbPosterChanged();
    partial void OnImdbParsedChanging(bool value);
    partial void OnImdbParsedChanged();
    partial void OnImdbLastParseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImdbLastParseDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInsertUserIDChanging(int value);
    partial void OnInsertUserIDChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserIDChanging(int value);
    partial void OnUpdateUserIDChanged();
    #endregion
		
		public ZZ_M_Movie_History()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryID
		{
			get
			{
				return this._HistoryID;
			}
			set
			{
				if ((this._HistoryID != value))
				{
					this.OnHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._HistoryID = value;
					this.SendPropertyChanged("HistoryID");
					this.OnHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImdbID", DbType="NVarChar(30)")]
		public string ImdbID
		{
			get
			{
				return this._ImdbID;
			}
			set
			{
				if ((this._ImdbID != value))
				{
					this.OnImdbIDChanging(value);
					this.SendPropertyChanging();
					this._ImdbID = value;
					this.SendPropertyChanged("ImdbID");
					this.OnImdbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImdbRating", DbType="Float")]
		public System.Nullable<double> ImdbRating
		{
			get
			{
				return this._ImdbRating;
			}
			set
			{
				if ((this._ImdbRating != value))
				{
					this.OnImdbRatingChanging(value);
					this.SendPropertyChanging();
					this._ImdbRating = value;
					this.SendPropertyChanged("ImdbRating");
					this.OnImdbRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImdbPoster", DbType="NVarChar(500)")]
		public string ImdbPoster
		{
			get
			{
				return this._ImdbPoster;
			}
			set
			{
				if ((this._ImdbPoster != value))
				{
					this.OnImdbPosterChanging(value);
					this.SendPropertyChanging();
					this._ImdbPoster = value;
					this.SendPropertyChanged("ImdbPoster");
					this.OnImdbPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImdbParsed", DbType="Bit NOT NULL")]
		public bool ImdbParsed
		{
			get
			{
				return this._ImdbParsed;
			}
			set
			{
				if ((this._ImdbParsed != value))
				{
					this.OnImdbParsedChanging(value);
					this.SendPropertyChanging();
					this._ImdbParsed = value;
					this.SendPropertyChanged("ImdbParsed");
					this.OnImdbParsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImdbLastParseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImdbLastParseDate
		{
			get
			{
				return this._ImdbLastParseDate;
			}
			set
			{
				if ((this._ImdbLastParseDate != value))
				{
					this.OnImdbLastParseDateChanging(value);
					this.SendPropertyChanging();
					this._ImdbLastParseDate = value;
					this.SendPropertyChanged("ImdbLastParseDate");
					this.OnImdbLastParseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserID", DbType="Int NOT NULL")]
		public int InsertUserID
		{
			get
			{
				return this._InsertUserID;
			}
			set
			{
				if ((this._InsertUserID != value))
				{
					this.OnInsertUserIDChanging(value);
					this.SendPropertyChanging();
					this._InsertUserID = value;
					this.SendPropertyChanged("InsertUserID");
					this.OnInsertUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserID", DbType="Int NOT NULL")]
		public int UpdateUserID
		{
			get
			{
				return this._UpdateUserID;
			}
			set
			{
				if ((this._UpdateUserID != value))
				{
					this.OnUpdateUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserID = value;
					this.SendPropertyChanged("UpdateUserID");
					this.OnUpdateUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
