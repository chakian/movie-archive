#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MArchiveLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="marchive")]
	public partial class marchiveDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblArchive(tblArchive instance);
    partial void UpdatetblArchive(tblArchive instance);
    partial void DeletetblArchive(tblArchive instance);
    partial void InserttblWriter(tblWriter instance);
    partial void UpdatetblWriter(tblWriter instance);
    partial void DeletetblWriter(tblWriter instance);
    partial void InserttblCast(tblCast instance);
    partial void UpdatetblCast(tblCast instance);
    partial void DeletetblCast(tblCast instance);
    partial void InserttblDirector(tblDirector instance);
    partial void UpdatetblDirector(tblDirector instance);
    partial void DeletetblDirector(tblDirector instance);
    partial void InserttblGenre(tblGenre instance);
    partial void UpdatetblGenre(tblGenre instance);
    partial void DeletetblGenre(tblGenre instance);
    partial void InserttblLanguage(tblLanguage instance);
    partial void UpdatetblLanguage(tblLanguage instance);
    partial void DeletetblLanguage(tblLanguage instance);
    partial void InserttblMovie(tblMovie instance);
    partial void UpdatetblMovie(tblMovie instance);
    partial void DeletetblMovie(tblMovie instance);
    partial void InserttblMovieArchive(tblMovieArchive instance);
    partial void UpdatetblMovieArchive(tblMovieArchive instance);
    partial void DeletetblMovieArchive(tblMovieArchive instance);
    partial void InserttblMovieCast(tblMovieCast instance);
    partial void UpdatetblMovieCast(tblMovieCast instance);
    partial void DeletetblMovieCast(tblMovieCast instance);
    partial void InserttblMovieDirector(tblMovieDirector instance);
    partial void UpdatetblMovieDirector(tblMovieDirector instance);
    partial void DeletetblMovieDirector(tblMovieDirector instance);
    partial void InserttblMovieGenre(tblMovieGenre instance);
    partial void UpdatetblMovieGenre(tblMovieGenre instance);
    partial void DeletetblMovieGenre(tblMovieGenre instance);
    partial void InserttblMovieLanguage(tblMovieLanguage instance);
    partial void UpdatetblMovieLanguage(tblMovieLanguage instance);
    partial void DeletetblMovieLanguage(tblMovieLanguage instance);
    partial void InserttblMovieWriter(tblMovieWriter instance);
    partial void UpdatetblMovieWriter(tblMovieWriter instance);
    partial void DeletetblMovieWriter(tblMovieWriter instance);
    partial void InserttblRating(tblRating instance);
    partial void UpdatetblRating(tblRating instance);
    partial void DeletetblRating(tblRating instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    #endregion
		
		public marchiveDbDataContext() : 
				base(global::MArchiveLibrary.Properties.Settings.Default.marchiveConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public marchiveDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public marchiveDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public marchiveDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public marchiveDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblArchive> tblArchives
		{
			get
			{
				return this.GetTable<tblArchive>();
			}
		}
		
		public System.Data.Linq.Table<tblWriter> tblWriters
		{
			get
			{
				return this.GetTable<tblWriter>();
			}
		}
		
		public System.Data.Linq.Table<tblCast> tblCasts
		{
			get
			{
				return this.GetTable<tblCast>();
			}
		}
		
		public System.Data.Linq.Table<tblDirector> tblDirectors
		{
			get
			{
				return this.GetTable<tblDirector>();
			}
		}
		
		public System.Data.Linq.Table<tblGenre> tblGenres
		{
			get
			{
				return this.GetTable<tblGenre>();
			}
		}
		
		public System.Data.Linq.Table<tblLanguage> tblLanguages
		{
			get
			{
				return this.GetTable<tblLanguage>();
			}
		}
		
		public System.Data.Linq.Table<tblMovie> tblMovies
		{
			get
			{
				return this.GetTable<tblMovie>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieArchive> tblMovieArchives
		{
			get
			{
				return this.GetTable<tblMovieArchive>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieCast> tblMovieCasts
		{
			get
			{
				return this.GetTable<tblMovieCast>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieDirector> tblMovieDirectors
		{
			get
			{
				return this.GetTable<tblMovieDirector>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieGenre> tblMovieGenres
		{
			get
			{
				return this.GetTable<tblMovieGenre>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieLanguage> tblMovieLanguages
		{
			get
			{
				return this.GetTable<tblMovieLanguage>();
			}
		}
		
		public System.Data.Linq.Table<tblMovieWriter> tblMovieWriters
		{
			get
			{
				return this.GetTable<tblMovieWriter>();
			}
		}
		
		public System.Data.Linq.Table<tblRating> tblRatings
		{
			get
			{
				return this.GetTable<tblRating>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblArchive")]
	public partial class tblArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _archiveId;
		
		private string _archiveName;
		
		private string _path;
		
		private EntitySet<tblMovieArchive> _tblMovieArchives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnarchiveIdChanging(int value);
    partial void OnarchiveIdChanged();
    partial void OnarchiveNameChanging(string value);
    partial void OnarchiveNameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public tblArchive()
		{
			this._tblMovieArchives = new EntitySet<tblMovieArchive>(new Action<tblMovieArchive>(this.attach_tblMovieArchives), new Action<tblMovieArchive>(this.detach_tblMovieArchives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_archiveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int archiveId
		{
			get
			{
				return this._archiveId;
			}
			set
			{
				if ((this._archiveId != value))
				{
					this.OnarchiveIdChanging(value);
					this.SendPropertyChanging();
					this._archiveId = value;
					this.SendPropertyChanged("archiveId");
					this.OnarchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_archiveName", DbType="NVarChar(100)")]
		public string archiveName
		{
			get
			{
				return this._archiveName;
			}
			set
			{
				if ((this._archiveName != value))
				{
					this.OnarchiveNameChanging(value);
					this.SendPropertyChanging();
					this._archiveName = value;
					this.SendPropertyChanged("archiveName");
					this.OnarchiveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(100)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblArchive_tblMovieArchive", Storage="_tblMovieArchives", ThisKey="archiveId", OtherKey="archiveId")]
		public EntitySet<tblMovieArchive> tblMovieArchives
		{
			get
			{
				return this._tblMovieArchives;
			}
			set
			{
				this._tblMovieArchives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieArchives(tblMovieArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblArchive = this;
		}
		
		private void detach_tblMovieArchives(tblMovieArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblArchive = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWriter")]
	public partial class tblWriter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _writerId;
		
		private string _writerName;
		
		private EntitySet<tblMovieWriter> _tblMovieWriters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwriterIdChanging(int value);
    partial void OnwriterIdChanged();
    partial void OnwriterNameChanging(string value);
    partial void OnwriterNameChanged();
    #endregion
		
		public tblWriter()
		{
			this._tblMovieWriters = new EntitySet<tblMovieWriter>(new Action<tblMovieWriter>(this.attach_tblMovieWriters), new Action<tblMovieWriter>(this.detach_tblMovieWriters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int writerId
		{
			get
			{
				return this._writerId;
			}
			set
			{
				if ((this._writerId != value))
				{
					this.OnwriterIdChanging(value);
					this.SendPropertyChanging();
					this._writerId = value;
					this.SendPropertyChanged("writerId");
					this.OnwriterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writerName", DbType="NVarChar(100)")]
		public string writerName
		{
			get
			{
				return this._writerName;
			}
			set
			{
				if ((this._writerName != value))
				{
					this.OnwriterNameChanging(value);
					this.SendPropertyChanging();
					this._writerName = value;
					this.SendPropertyChanged("writerName");
					this.OnwriterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWriter_tblMovieWriter", Storage="_tblMovieWriters", ThisKey="writerId", OtherKey="writerId")]
		public EntitySet<tblMovieWriter> tblMovieWriters
		{
			get
			{
				return this._tblMovieWriters;
			}
			set
			{
				this._tblMovieWriters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieWriters(tblMovieWriter entity)
		{
			this.SendPropertyChanging();
			entity.tblWriter = this;
		}
		
		private void detach_tblMovieWriters(tblMovieWriter entity)
		{
			this.SendPropertyChanging();
			entity.tblWriter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCast")]
	public partial class tblCast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _castId;
		
		private string _castName;
		
		private EntitySet<tblMovieCast> _tblMovieCasts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncastIdChanging(int value);
    partial void OncastIdChanged();
    partial void OncastNameChanging(string value);
    partial void OncastNameChanged();
    #endregion
		
		public tblCast()
		{
			this._tblMovieCasts = new EntitySet<tblMovieCast>(new Action<tblMovieCast>(this.attach_tblMovieCasts), new Action<tblMovieCast>(this.detach_tblMovieCasts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_castId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int castId
		{
			get
			{
				return this._castId;
			}
			set
			{
				if ((this._castId != value))
				{
					this.OncastIdChanging(value);
					this.SendPropertyChanging();
					this._castId = value;
					this.SendPropertyChanged("castId");
					this.OncastIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_castName", DbType="NVarChar(100)")]
		public string castName
		{
			get
			{
				return this._castName;
			}
			set
			{
				if ((this._castName != value))
				{
					this.OncastNameChanging(value);
					this.SendPropertyChanging();
					this._castName = value;
					this.SendPropertyChanged("castName");
					this.OncastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCast_tblMovieCast", Storage="_tblMovieCasts", ThisKey="castId", OtherKey="castId")]
		public EntitySet<tblMovieCast> tblMovieCasts
		{
			get
			{
				return this._tblMovieCasts;
			}
			set
			{
				this._tblMovieCasts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieCasts(tblMovieCast entity)
		{
			this.SendPropertyChanging();
			entity.tblCast = this;
		}
		
		private void detach_tblMovieCasts(tblMovieCast entity)
		{
			this.SendPropertyChanging();
			entity.tblCast = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDirector")]
	public partial class tblDirector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _directorId;
		
		private string _directorName;
		
		private EntitySet<tblMovieDirector> _tblMovieDirectors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndirectorIdChanging(int value);
    partial void OndirectorIdChanged();
    partial void OndirectorNameChanging(string value);
    partial void OndirectorNameChanged();
    #endregion
		
		public tblDirector()
		{
			this._tblMovieDirectors = new EntitySet<tblMovieDirector>(new Action<tblMovieDirector>(this.attach_tblMovieDirectors), new Action<tblMovieDirector>(this.detach_tblMovieDirectors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int directorId
		{
			get
			{
				return this._directorId;
			}
			set
			{
				if ((this._directorId != value))
				{
					this.OndirectorIdChanging(value);
					this.SendPropertyChanging();
					this._directorId = value;
					this.SendPropertyChanged("directorId");
					this.OndirectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directorName", DbType="NVarChar(100)")]
		public string directorName
		{
			get
			{
				return this._directorName;
			}
			set
			{
				if ((this._directorName != value))
				{
					this.OndirectorNameChanging(value);
					this.SendPropertyChanging();
					this._directorName = value;
					this.SendPropertyChanged("directorName");
					this.OndirectorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDirector_tblMovieDirector", Storage="_tblMovieDirectors", ThisKey="directorId", OtherKey="directorId")]
		public EntitySet<tblMovieDirector> tblMovieDirectors
		{
			get
			{
				return this._tblMovieDirectors;
			}
			set
			{
				this._tblMovieDirectors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieDirectors(tblMovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.tblDirector = this;
		}
		
		private void detach_tblMovieDirectors(tblMovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.tblDirector = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGenre")]
	public partial class tblGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _genreId;
		
		private string _genreName;
		
		private EntitySet<tblMovieGenre> _tblMovieGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngenreIdChanging(int value);
    partial void OngenreIdChanged();
    partial void OngenreNameChanging(string value);
    partial void OngenreNameChanged();
    #endregion
		
		public tblGenre()
		{
			this._tblMovieGenres = new EntitySet<tblMovieGenre>(new Action<tblMovieGenre>(this.attach_tblMovieGenres), new Action<tblMovieGenre>(this.detach_tblMovieGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int genreId
		{
			get
			{
				return this._genreId;
			}
			set
			{
				if ((this._genreId != value))
				{
					this.OngenreIdChanging(value);
					this.SendPropertyChanging();
					this._genreId = value;
					this.SendPropertyChanged("genreId");
					this.OngenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreName", DbType="NVarChar(100)")]
		public string genreName
		{
			get
			{
				return this._genreName;
			}
			set
			{
				if ((this._genreName != value))
				{
					this.OngenreNameChanging(value);
					this.SendPropertyChanging();
					this._genreName = value;
					this.SendPropertyChanged("genreName");
					this.OngenreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGenre_tblMovieGenre", Storage="_tblMovieGenres", ThisKey="genreId", OtherKey="genreId")]
		public EntitySet<tblMovieGenre> tblMovieGenres
		{
			get
			{
				return this._tblMovieGenres;
			}
			set
			{
				this._tblMovieGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieGenres(tblMovieGenre entity)
		{
			this.SendPropertyChanging();
			entity.tblGenre = this;
		}
		
		private void detach_tblMovieGenres(tblMovieGenre entity)
		{
			this.SendPropertyChanging();
			entity.tblGenre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLanguage")]
	public partial class tblLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _languageId;
		
		private string _languageName;
		
		private EntitySet<tblMovieLanguage> _tblMovieLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlanguageIdChanging(int value);
    partial void OnlanguageIdChanged();
    partial void OnlanguageNameChanging(string value);
    partial void OnlanguageNameChanged();
    #endregion
		
		public tblLanguage()
		{
			this._tblMovieLanguages = new EntitySet<tblMovieLanguage>(new Action<tblMovieLanguage>(this.attach_tblMovieLanguages), new Action<tblMovieLanguage>(this.detach_tblMovieLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageName", DbType="NVarChar(100)")]
		public string languageName
		{
			get
			{
				return this._languageName;
			}
			set
			{
				if ((this._languageName != value))
				{
					this.OnlanguageNameChanging(value);
					this.SendPropertyChanging();
					this._languageName = value;
					this.SendPropertyChanged("languageName");
					this.OnlanguageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLanguage_tblMovieLanguage", Storage="_tblMovieLanguages", ThisKey="languageId", OtherKey="languageId")]
		public EntitySet<tblMovieLanguage> tblMovieLanguages
		{
			get
			{
				return this._tblMovieLanguages;
			}
			set
			{
				this._tblMovieLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieLanguages(tblMovieLanguage entity)
		{
			this.SendPropertyChanging();
			entity.tblLanguage = this;
		}
		
		private void detach_tblMovieLanguages(tblMovieLanguage entity)
		{
			this.SendPropertyChanging();
			entity.tblLanguage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovie")]
	public partial class tblMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _movieId;
		
		private string _movieEnglishName;
		
		private string _movieTurkishName;
		
		private string _movieOriginalName;
		
		private System.Nullable<bool> _movieWatched;
		
		private System.Nullable<int> _movieYear;
		
		private System.Nullable<int> _movieMyRating;
		
		private string _movieImdbId;
		
		private System.Nullable<double> _movieImdbRating;
		
		private string _movieImdbPoster;
		
		private System.Nullable<bool> _imdbParsed;
		
		private System.Nullable<System.DateTime> _insertDate;
		
		private System.Nullable<System.DateTime> _updateDate;
		
		private EntitySet<tblMovieArchive> _tblMovieArchives;
		
		private EntitySet<tblMovieCast> _tblMovieCasts;
		
		private EntitySet<tblMovieDirector> _tblMovieDirectors;
		
		private EntitySet<tblMovieGenre> _tblMovieGenres;
		
		private EntitySet<tblMovieLanguage> _tblMovieLanguages;
		
		private EntitySet<tblMovieWriter> _tblMovieWriters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieIdChanging(int value);
    partial void OnmovieIdChanged();
    partial void OnmovieEnglishNameChanging(string value);
    partial void OnmovieEnglishNameChanged();
    partial void OnmovieTurkishNameChanging(string value);
    partial void OnmovieTurkishNameChanged();
    partial void OnmovieOriginalNameChanging(string value);
    partial void OnmovieOriginalNameChanged();
    partial void OnmovieWatchedChanging(System.Nullable<bool> value);
    partial void OnmovieWatchedChanged();
    partial void OnmovieYearChanging(System.Nullable<int> value);
    partial void OnmovieYearChanged();
    partial void OnmovieMyRatingChanging(System.Nullable<int> value);
    partial void OnmovieMyRatingChanged();
    partial void OnmovieImdbIdChanging(string value);
    partial void OnmovieImdbIdChanged();
    partial void OnmovieImdbRatingChanging(System.Nullable<double> value);
    partial void OnmovieImdbRatingChanged();
    partial void OnmovieImdbPosterChanging(string value);
    partial void OnmovieImdbPosterChanged();
    partial void OnimdbParsedChanging(System.Nullable<bool> value);
    partial void OnimdbParsedChanged();
    partial void OninsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OninsertDateChanged();
    partial void OnupdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnupdateDateChanged();
    #endregion
		
		public tblMovie()
		{
			this._tblMovieArchives = new EntitySet<tblMovieArchive>(new Action<tblMovieArchive>(this.attach_tblMovieArchives), new Action<tblMovieArchive>(this.detach_tblMovieArchives));
			this._tblMovieCasts = new EntitySet<tblMovieCast>(new Action<tblMovieCast>(this.attach_tblMovieCasts), new Action<tblMovieCast>(this.detach_tblMovieCasts));
			this._tblMovieDirectors = new EntitySet<tblMovieDirector>(new Action<tblMovieDirector>(this.attach_tblMovieDirectors), new Action<tblMovieDirector>(this.detach_tblMovieDirectors));
			this._tblMovieGenres = new EntitySet<tblMovieGenre>(new Action<tblMovieGenre>(this.attach_tblMovieGenres), new Action<tblMovieGenre>(this.detach_tblMovieGenres));
			this._tblMovieLanguages = new EntitySet<tblMovieLanguage>(new Action<tblMovieLanguage>(this.attach_tblMovieLanguages), new Action<tblMovieLanguage>(this.detach_tblMovieLanguages));
			this._tblMovieWriters = new EntitySet<tblMovieWriter>(new Action<tblMovieWriter>(this.attach_tblMovieWriters), new Action<tblMovieWriter>(this.detach_tblMovieWriters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieEnglishName", DbType="NVarChar(100)")]
		public string movieEnglishName
		{
			get
			{
				return this._movieEnglishName;
			}
			set
			{
				if ((this._movieEnglishName != value))
				{
					this.OnmovieEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._movieEnglishName = value;
					this.SendPropertyChanged("movieEnglishName");
					this.OnmovieEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieTurkishName", DbType="NVarChar(100)")]
		public string movieTurkishName
		{
			get
			{
				return this._movieTurkishName;
			}
			set
			{
				if ((this._movieTurkishName != value))
				{
					this.OnmovieTurkishNameChanging(value);
					this.SendPropertyChanging();
					this._movieTurkishName = value;
					this.SendPropertyChanged("movieTurkishName");
					this.OnmovieTurkishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieOriginalName", DbType="NVarChar(100)")]
		public string movieOriginalName
		{
			get
			{
				return this._movieOriginalName;
			}
			set
			{
				if ((this._movieOriginalName != value))
				{
					this.OnmovieOriginalNameChanging(value);
					this.SendPropertyChanging();
					this._movieOriginalName = value;
					this.SendPropertyChanged("movieOriginalName");
					this.OnmovieOriginalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieWatched", DbType="Bit")]
		public System.Nullable<bool> movieWatched
		{
			get
			{
				return this._movieWatched;
			}
			set
			{
				if ((this._movieWatched != value))
				{
					this.OnmovieWatchedChanging(value);
					this.SendPropertyChanging();
					this._movieWatched = value;
					this.SendPropertyChanged("movieWatched");
					this.OnmovieWatchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieYear", DbType="Int")]
		public System.Nullable<int> movieYear
		{
			get
			{
				return this._movieYear;
			}
			set
			{
				if ((this._movieYear != value))
				{
					this.OnmovieYearChanging(value);
					this.SendPropertyChanging();
					this._movieYear = value;
					this.SendPropertyChanged("movieYear");
					this.OnmovieYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieMyRating", DbType="Int")]
		public System.Nullable<int> movieMyRating
		{
			get
			{
				return this._movieMyRating;
			}
			set
			{
				if ((this._movieMyRating != value))
				{
					this.OnmovieMyRatingChanging(value);
					this.SendPropertyChanging();
					this._movieMyRating = value;
					this.SendPropertyChanged("movieMyRating");
					this.OnmovieMyRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieImdbId", DbType="VarChar(20)")]
		public string movieImdbId
		{
			get
			{
				return this._movieImdbId;
			}
			set
			{
				if ((this._movieImdbId != value))
				{
					this.OnmovieImdbIdChanging(value);
					this.SendPropertyChanging();
					this._movieImdbId = value;
					this.SendPropertyChanged("movieImdbId");
					this.OnmovieImdbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieImdbRating", DbType="Float")]
		public System.Nullable<double> movieImdbRating
		{
			get
			{
				return this._movieImdbRating;
			}
			set
			{
				if ((this._movieImdbRating != value))
				{
					this.OnmovieImdbRatingChanging(value);
					this.SendPropertyChanging();
					this._movieImdbRating = value;
					this.SendPropertyChanged("movieImdbRating");
					this.OnmovieImdbRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieImdbPoster", DbType="NVarChar(250)")]
		public string movieImdbPoster
		{
			get
			{
				return this._movieImdbPoster;
			}
			set
			{
				if ((this._movieImdbPoster != value))
				{
					this.OnmovieImdbPosterChanging(value);
					this.SendPropertyChanging();
					this._movieImdbPoster = value;
					this.SendPropertyChanged("movieImdbPoster");
					this.OnmovieImdbPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imdbParsed", DbType="Bit")]
		public System.Nullable<bool> imdbParsed
		{
			get
			{
				return this._imdbParsed;
			}
			set
			{
				if ((this._imdbParsed != value))
				{
					this.OnimdbParsedChanging(value);
					this.SendPropertyChanging();
					this._imdbParsed = value;
					this.SendPropertyChanged("imdbParsed");
					this.OnimdbParsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> insertDate
		{
			get
			{
				return this._insertDate;
			}
			set
			{
				if ((this._insertDate != value))
				{
					this.OninsertDateChanging(value);
					this.SendPropertyChanging();
					this._insertDate = value;
					this.SendPropertyChanged("insertDate");
					this.OninsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> updateDate
		{
			get
			{
				return this._updateDate;
			}
			set
			{
				if ((this._updateDate != value))
				{
					this.OnupdateDateChanging(value);
					this.SendPropertyChanging();
					this._updateDate = value;
					this.SendPropertyChanged("updateDate");
					this.OnupdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieArchive", Storage="_tblMovieArchives", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieArchive> tblMovieArchives
		{
			get
			{
				return this._tblMovieArchives;
			}
			set
			{
				this._tblMovieArchives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieCast", Storage="_tblMovieCasts", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieCast> tblMovieCasts
		{
			get
			{
				return this._tblMovieCasts;
			}
			set
			{
				this._tblMovieCasts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieDirector", Storage="_tblMovieDirectors", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieDirector> tblMovieDirectors
		{
			get
			{
				return this._tblMovieDirectors;
			}
			set
			{
				this._tblMovieDirectors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieGenre", Storage="_tblMovieGenres", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieGenre> tblMovieGenres
		{
			get
			{
				return this._tblMovieGenres;
			}
			set
			{
				this._tblMovieGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieLanguage", Storage="_tblMovieLanguages", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieLanguage> tblMovieLanguages
		{
			get
			{
				return this._tblMovieLanguages;
			}
			set
			{
				this._tblMovieLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieWriter", Storage="_tblMovieWriters", ThisKey="movieId", OtherKey="movieId")]
		public EntitySet<tblMovieWriter> tblMovieWriters
		{
			get
			{
				return this._tblMovieWriters;
			}
			set
			{
				this._tblMovieWriters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMovieArchives(tblMovieArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieArchives(tblMovieArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
		
		private void attach_tblMovieCasts(tblMovieCast entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieCasts(tblMovieCast entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
		
		private void attach_tblMovieDirectors(tblMovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieDirectors(tblMovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
		
		private void attach_tblMovieGenres(tblMovieGenre entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieGenres(tblMovieGenre entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
		
		private void attach_tblMovieLanguages(tblMovieLanguage entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieLanguages(tblMovieLanguage entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
		
		private void attach_tblMovieWriters(tblMovieWriter entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = this;
		}
		
		private void detach_tblMovieWriters(tblMovieWriter entity)
		{
			this.SendPropertyChanging();
			entity.tblMovie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieArchive")]
	public partial class tblMovieArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieArchiveId;
		
		private int _movieId;
		
		private int _archiveId;
		
		private string _resolution;
		
		private string _fileExtension;
		
		private string _path;
		
		private EntityRef<tblArchive> _tblArchive;
		
		private EntityRef<tblMovie> _tblMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieArchiveIdChanging(long value);
    partial void OnmovieArchiveIdChanged();
    partial void OnmovieIdChanging(int value);
    partial void OnmovieIdChanged();
    partial void OnarchiveIdChanging(int value);
    partial void OnarchiveIdChanged();
    partial void OnresolutionChanging(string value);
    partial void OnresolutionChanged();
    partial void OnfileExtensionChanging(string value);
    partial void OnfileExtensionChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public tblMovieArchive()
		{
			this._tblArchive = default(EntityRef<tblArchive>);
			this._tblMovie = default(EntityRef<tblMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieArchiveId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieArchiveId
		{
			get
			{
				return this._movieArchiveId;
			}
			set
			{
				if ((this._movieArchiveId != value))
				{
					this.OnmovieArchiveIdChanging(value);
					this.SendPropertyChanging();
					this._movieArchiveId = value;
					this.SendPropertyChanged("movieArchiveId");
					this.OnmovieArchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int NOT NULL")]
		public int movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_archiveId", DbType="Int NOT NULL")]
		public int archiveId
		{
			get
			{
				return this._archiveId;
			}
			set
			{
				if ((this._archiveId != value))
				{
					if (this._tblArchive.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarchiveIdChanging(value);
					this.SendPropertyChanging();
					this._archiveId = value;
					this.SendPropertyChanged("archiveId");
					this.OnarchiveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resolution", DbType="NVarChar(30)")]
		public string resolution
		{
			get
			{
				return this._resolution;
			}
			set
			{
				if ((this._resolution != value))
				{
					this.OnresolutionChanging(value);
					this.SendPropertyChanging();
					this._resolution = value;
					this.SendPropertyChanged("resolution");
					this.OnresolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileExtension", DbType="VarChar(8)")]
		public string fileExtension
		{
			get
			{
				return this._fileExtension;
			}
			set
			{
				if ((this._fileExtension != value))
				{
					this.OnfileExtensionChanging(value);
					this.SendPropertyChanging();
					this._fileExtension = value;
					this.SendPropertyChanged("fileExtension");
					this.OnfileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(1000)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblArchive_tblMovieArchive", Storage="_tblArchive", ThisKey="archiveId", OtherKey="archiveId", IsForeignKey=true)]
		public tblArchive tblArchive
		{
			get
			{
				return this._tblArchive.Entity;
			}
			set
			{
				tblArchive previousValue = this._tblArchive.Entity;
				if (((previousValue != value) 
							|| (this._tblArchive.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblArchive.Entity = null;
						previousValue.tblMovieArchives.Remove(this);
					}
					this._tblArchive.Entity = value;
					if ((value != null))
					{
						value.tblMovieArchives.Add(this);
						this._archiveId = value.archiveId;
					}
					else
					{
						this._archiveId = default(int);
					}
					this.SendPropertyChanged("tblArchive");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieArchive", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieArchives.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieArchives.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(int);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieCast")]
	public partial class tblMovieCast : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieCastId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<int> _castId;
		
		private EntityRef<tblCast> _tblCast;
		
		private EntityRef<tblMovie> _tblMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieCastIdChanging(long value);
    partial void OnmovieCastIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OncastIdChanging(System.Nullable<int> value);
    partial void OncastIdChanged();
    #endregion
		
		public tblMovieCast()
		{
			this._tblCast = default(EntityRef<tblCast>);
			this._tblMovie = default(EntityRef<tblMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieCastId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieCastId
		{
			get
			{
				return this._movieCastId;
			}
			set
			{
				if ((this._movieCastId != value))
				{
					this.OnmovieCastIdChanging(value);
					this.SendPropertyChanging();
					this._movieCastId = value;
					this.SendPropertyChanged("movieCastId");
					this.OnmovieCastIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_castId", DbType="Int")]
		public System.Nullable<int> castId
		{
			get
			{
				return this._castId;
			}
			set
			{
				if ((this._castId != value))
				{
					if (this._tblCast.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncastIdChanging(value);
					this.SendPropertyChanging();
					this._castId = value;
					this.SendPropertyChanged("castId");
					this.OncastIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCast_tblMovieCast", Storage="_tblCast", ThisKey="castId", OtherKey="castId", IsForeignKey=true)]
		public tblCast tblCast
		{
			get
			{
				return this._tblCast.Entity;
			}
			set
			{
				tblCast previousValue = this._tblCast.Entity;
				if (((previousValue != value) 
							|| (this._tblCast.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCast.Entity = null;
						previousValue.tblMovieCasts.Remove(this);
					}
					this._tblCast.Entity = value;
					if ((value != null))
					{
						value.tblMovieCasts.Add(this);
						this._castId = value.castId;
					}
					else
					{
						this._castId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCast");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieCast", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieCasts.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieCasts.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieDirector")]
	public partial class tblMovieDirector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieDirectorId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<int> _directorId;
		
		private EntityRef<tblDirector> _tblDirector;
		
		private EntityRef<tblMovie> _tblMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieDirectorIdChanging(long value);
    partial void OnmovieDirectorIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OndirectorIdChanging(System.Nullable<int> value);
    partial void OndirectorIdChanged();
    #endregion
		
		public tblMovieDirector()
		{
			this._tblDirector = default(EntityRef<tblDirector>);
			this._tblMovie = default(EntityRef<tblMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieDirectorId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieDirectorId
		{
			get
			{
				return this._movieDirectorId;
			}
			set
			{
				if ((this._movieDirectorId != value))
				{
					this.OnmovieDirectorIdChanging(value);
					this.SendPropertyChanging();
					this._movieDirectorId = value;
					this.SendPropertyChanged("movieDirectorId");
					this.OnmovieDirectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_directorId", DbType="Int")]
		public System.Nullable<int> directorId
		{
			get
			{
				return this._directorId;
			}
			set
			{
				if ((this._directorId != value))
				{
					if (this._tblDirector.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndirectorIdChanging(value);
					this.SendPropertyChanging();
					this._directorId = value;
					this.SendPropertyChanged("directorId");
					this.OndirectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDirector_tblMovieDirector", Storage="_tblDirector", ThisKey="directorId", OtherKey="directorId", IsForeignKey=true)]
		public tblDirector tblDirector
		{
			get
			{
				return this._tblDirector.Entity;
			}
			set
			{
				tblDirector previousValue = this._tblDirector.Entity;
				if (((previousValue != value) 
							|| (this._tblDirector.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDirector.Entity = null;
						previousValue.tblMovieDirectors.Remove(this);
					}
					this._tblDirector.Entity = value;
					if ((value != null))
					{
						value.tblMovieDirectors.Add(this);
						this._directorId = value.directorId;
					}
					else
					{
						this._directorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblDirector");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieDirector", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieDirectors.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieDirectors.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieGenre")]
	public partial class tblMovieGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieGenreId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<int> _genreId;
		
		private EntityRef<tblGenre> _tblGenre;
		
		private EntityRef<tblMovie> _tblMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieGenreIdChanging(long value);
    partial void OnmovieGenreIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OngenreIdChanging(System.Nullable<int> value);
    partial void OngenreIdChanged();
    #endregion
		
		public tblMovieGenre()
		{
			this._tblGenre = default(EntityRef<tblGenre>);
			this._tblMovie = default(EntityRef<tblMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieGenreId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieGenreId
		{
			get
			{
				return this._movieGenreId;
			}
			set
			{
				if ((this._movieGenreId != value))
				{
					this.OnmovieGenreIdChanging(value);
					this.SendPropertyChanging();
					this._movieGenreId = value;
					this.SendPropertyChanged("movieGenreId");
					this.OnmovieGenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genreId", DbType="Int")]
		public System.Nullable<int> genreId
		{
			get
			{
				return this._genreId;
			}
			set
			{
				if ((this._genreId != value))
				{
					if (this._tblGenre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngenreIdChanging(value);
					this.SendPropertyChanging();
					this._genreId = value;
					this.SendPropertyChanged("genreId");
					this.OngenreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGenre_tblMovieGenre", Storage="_tblGenre", ThisKey="genreId", OtherKey="genreId", IsForeignKey=true)]
		public tblGenre tblGenre
		{
			get
			{
				return this._tblGenre.Entity;
			}
			set
			{
				tblGenre previousValue = this._tblGenre.Entity;
				if (((previousValue != value) 
							|| (this._tblGenre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGenre.Entity = null;
						previousValue.tblMovieGenres.Remove(this);
					}
					this._tblGenre.Entity = value;
					if ((value != null))
					{
						value.tblMovieGenres.Add(this);
						this._genreId = value.genreId;
					}
					else
					{
						this._genreId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblGenre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieGenre", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieGenres.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieGenres.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieLanguage")]
	public partial class tblMovieLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieLanguageId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<int> _languageId;
		
		private EntityRef<tblLanguage> _tblLanguage;
		
		private EntityRef<tblMovie> _tblMovie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieLanguageIdChanging(long value);
    partial void OnmovieLanguageIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OnlanguageIdChanging(System.Nullable<int> value);
    partial void OnlanguageIdChanged();
    #endregion
		
		public tblMovieLanguage()
		{
			this._tblLanguage = default(EntityRef<tblLanguage>);
			this._tblMovie = default(EntityRef<tblMovie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieLanguageId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieLanguageId
		{
			get
			{
				return this._movieLanguageId;
			}
			set
			{
				if ((this._movieLanguageId != value))
				{
					this.OnmovieLanguageIdChanging(value);
					this.SendPropertyChanging();
					this._movieLanguageId = value;
					this.SendPropertyChanged("movieLanguageId");
					this.OnmovieLanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_languageId", DbType="Int")]
		public System.Nullable<int> languageId
		{
			get
			{
				return this._languageId;
			}
			set
			{
				if ((this._languageId != value))
				{
					if (this._tblLanguage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlanguageIdChanging(value);
					this.SendPropertyChanging();
					this._languageId = value;
					this.SendPropertyChanged("languageId");
					this.OnlanguageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblLanguage_tblMovieLanguage", Storage="_tblLanguage", ThisKey="languageId", OtherKey="languageId", IsForeignKey=true)]
		public tblLanguage tblLanguage
		{
			get
			{
				return this._tblLanguage.Entity;
			}
			set
			{
				tblLanguage previousValue = this._tblLanguage.Entity;
				if (((previousValue != value) 
							|| (this._tblLanguage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblLanguage.Entity = null;
						previousValue.tblMovieLanguages.Remove(this);
					}
					this._tblLanguage.Entity = value;
					if ((value != null))
					{
						value.tblMovieLanguages.Add(this);
						this._languageId = value.languageId;
					}
					else
					{
						this._languageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblLanguage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieLanguage", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieLanguages.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieLanguages.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMovieWriter")]
	public partial class tblMovieWriter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _movieWriterId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<int> _writerId;
		
		private EntityRef<tblMovie> _tblMovie;
		
		private EntityRef<tblWriter> _tblWriter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmovieWriterIdChanging(long value);
    partial void OnmovieWriterIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OnwriterIdChanging(System.Nullable<int> value);
    partial void OnwriterIdChanged();
    #endregion
		
		public tblMovieWriter()
		{
			this._tblMovie = default(EntityRef<tblMovie>);
			this._tblWriter = default(EntityRef<tblWriter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieWriterId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long movieWriterId
		{
			get
			{
				return this._movieWriterId;
			}
			set
			{
				if ((this._movieWriterId != value))
				{
					this.OnmovieWriterIdChanging(value);
					this.SendPropertyChanging();
					this._movieWriterId = value;
					this.SendPropertyChanged("movieWriterId");
					this.OnmovieWriterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					if (this._tblMovie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writerId", DbType="Int")]
		public System.Nullable<int> writerId
		{
			get
			{
				return this._writerId;
			}
			set
			{
				if ((this._writerId != value))
				{
					if (this._tblWriter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwriterIdChanging(value);
					this.SendPropertyChanging();
					this._writerId = value;
					this.SendPropertyChanged("writerId");
					this.OnwriterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMovie_tblMovieWriter", Storage="_tblMovie", ThisKey="movieId", OtherKey="movieId", IsForeignKey=true)]
		public tblMovie tblMovie
		{
			get
			{
				return this._tblMovie.Entity;
			}
			set
			{
				tblMovie previousValue = this._tblMovie.Entity;
				if (((previousValue != value) 
							|| (this._tblMovie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMovie.Entity = null;
						previousValue.tblMovieWriters.Remove(this);
					}
					this._tblMovie.Entity = value;
					if ((value != null))
					{
						value.tblMovieWriters.Add(this);
						this._movieId = value.movieId;
					}
					else
					{
						this._movieId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMovie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWriter_tblMovieWriter", Storage="_tblWriter", ThisKey="writerId", OtherKey="writerId", IsForeignKey=true)]
		public tblWriter tblWriter
		{
			get
			{
				return this._tblWriter.Entity;
			}
			set
			{
				tblWriter previousValue = this._tblWriter.Entity;
				if (((previousValue != value) 
							|| (this._tblWriter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWriter.Entity = null;
						previousValue.tblMovieWriters.Remove(this);
					}
					this._tblWriter.Entity = value;
					if ((value != null))
					{
						value.tblMovieWriters.Add(this);
						this._writerId = value.writerId;
					}
					else
					{
						this._writerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblWriter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRating")]
	public partial class tblRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ratingId;
		
		private System.Nullable<int> _userId;
		
		private System.Nullable<int> _movieId;
		
		private System.Nullable<bool> _watched;
		
		private System.Nullable<decimal> _rating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnratingIdChanging(int value);
    partial void OnratingIdChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    partial void OnmovieIdChanging(System.Nullable<int> value);
    partial void OnmovieIdChanged();
    partial void OnwatchedChanging(System.Nullable<bool> value);
    partial void OnwatchedChanged();
    partial void OnratingChanging(System.Nullable<decimal> value);
    partial void OnratingChanged();
    #endregion
		
		public tblRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ratingId
		{
			get
			{
				return this._ratingId;
			}
			set
			{
				if ((this._ratingId != value))
				{
					this.OnratingIdChanging(value);
					this.SendPropertyChanging();
					this._ratingId = value;
					this.SendPropertyChanged("ratingId");
					this.OnratingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_movieId", DbType="Int")]
		public System.Nullable<int> movieId
		{
			get
			{
				return this._movieId;
			}
			set
			{
				if ((this._movieId != value))
				{
					this.OnmovieIdChanging(value);
					this.SendPropertyChanging();
					this._movieId = value;
					this.SendPropertyChanged("movieId");
					this.OnmovieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_watched", DbType="Bit")]
		public System.Nullable<bool> watched
		{
			get
			{
				return this._watched;
			}
			set
			{
				if ((this._watched != value))
				{
					this.OnwatchedChanging(value);
					this.SendPropertyChanging();
					this._watched = value;
					this.SendPropertyChanged("watched");
					this.OnwatchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private string _userUsername;
		
		private string _userPassword;
		
		private string _userEmail;
		
		private string _userName;
		
		private string _userLastName;
		
		private System.Nullable<bool> _isAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnuserUsernameChanging(string value);
    partial void OnuserUsernameChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    partial void OnuserEmailChanging(string value);
    partial void OnuserEmailChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserLastNameChanging(string value);
    partial void OnuserLastNameChanged();
    partial void OnisAdminChanging(System.Nullable<bool> value);
    partial void OnisAdminChanged();
    #endregion
		
		public tblUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userUsername", DbType="NVarChar(50)")]
		public string userUsername
		{
			get
			{
				return this._userUsername;
			}
			set
			{
				if ((this._userUsername != value))
				{
					this.OnuserUsernameChanging(value);
					this.SendPropertyChanging();
					this._userUsername = value;
					this.SendPropertyChanged("userUsername");
					this.OnuserUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="NVarChar(50)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this.OnuserPasswordChanging(value);
					this.SendPropertyChanging();
					this._userPassword = value;
					this.SendPropertyChanged("userPassword");
					this.OnuserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userEmail", DbType="NVarChar(100)")]
		public string userEmail
		{
			get
			{
				return this._userEmail;
			}
			set
			{
				if ((this._userEmail != value))
				{
					this.OnuserEmailChanging(value);
					this.SendPropertyChanging();
					this._userEmail = value;
					this.SendPropertyChanged("userEmail");
					this.OnuserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(100)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userLastName", DbType="NVarChar(100)")]
		public string userLastName
		{
			get
			{
				return this._userLastName;
			}
			set
			{
				if ((this._userLastName != value))
				{
					this.OnuserLastNameChanging(value);
					this.SendPropertyChanging();
					this._userLastName = value;
					this.SendPropertyChanged("userLastName");
					this.OnuserLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdmin", DbType="Bit")]
		public System.Nullable<bool> isAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnisAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("isAdmin");
					this.OnisAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
